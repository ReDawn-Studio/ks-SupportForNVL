{"version":3,"file":"extension.js","mappings":"k3BAGA,kBACA,SACA,YACA,MAAaA,EACX,sBAAAC,CAAuBC,EAA+BC,GAIpD,GAFmBD,EAASE,OAAOD,GAAUE,KAAKC,OAAO,EAAGH,EAASI,WAEtDC,SAAS,KAAM,CAE5B,MAAMC,EAAK,IAAIC,EAAOC,eAAe,KAAMD,EAAOE,mBAAmBC,UACrEJ,EAAGK,WAAa,IAAIJ,EAAOK,cAAc,2BAEzCN,EAAGO,OAAS,OACZP,EAAGQ,cAAgB,IAAIP,EAAOQ,eAC5B,qLAUF,MAAMC,EAAkB,IAAIT,EAAOC,eAAe,KAAMD,EAAOE,mBAAmBC,UAYlF,OAXAM,EAAgBF,cAAgB,IAAIP,EAAOQ,eACzC,iJAOFC,EAAgBH,OAAS,OACzBG,EAAgBL,WAAa,IAAIJ,EAAOK,cAAc,sCAE/C,IAAAK,oBAAmB,UAC5B,CAEA,MAAO,EACT,EAtCF,yBAwCA,MAAaC,EACX,YAAAC,CAAapB,EAA+BC,GAC1C,MAAMoB,EAAYrB,EAASsB,uBAAuBrB,EAAU,uBAC5D,IAAKoB,EACH,OAGF,MAAME,EAAOvB,EAASwB,QAAQH,GAC9B,GAAa,QAATE,GAA2B,YAATA,EAAoB,CAExC,MAAME,EAAe,IAAIjB,EAAOQ,eAIhC,OAHAS,EAAaC,gBAAgB,aAAc,UAC3CD,EAAaE,eAAe,iBAErB,IAAInB,EAAOoB,MAAMH,EAAcJ,EACxC,CAGF,EAlBF,oBAqBA,oBAAyBQ,GAEvBC,QAAQC,IAAI,sEAGZ,IAAIC,EAAaxB,EAAOyB,SAASC,gBAAgB,yBAAyB,KACxE1B,EAAO2B,OAAOC,uBAAuB,eAAe,IAEtDP,EAAQQ,cAAcC,KACpB9B,EAAO+B,UAAUC,+BACf,CAAEC,OAAQ,OAAQC,SAAU,MAC5B,IAAI5C,EACJ,KAEFU,EAAO+B,UAAUI,sBACf,CAAEF,OAAQ,OAAQC,SAAU,MAC5B,IAAIvB,IAGRU,EAAQQ,cAAcC,KAAKN,EAE7B,C,60BCrFA,kBACA,YAEW,EAAAd,mBAAsB0B,IAC/B,IAAInC,EAAwB,GAY5B,OAXAoC,OAAOC,KAAKF,GAAYG,SAASC,IAC/B,MAAMC,EAAO,IAAIzC,EAAOC,eAAeuC,EAAQxC,EAAOE,mBAAmBC,UACzEsC,EAAKrC,WAAa,IAAIJ,EAAOK,cAAc+B,EAAWI,GAAiB,SAAK,MAE5EC,EAAKnC,OAAS8B,EAAWI,GAAc,MAAK,KAC5CC,EAAKlC,cAAgB,IAAIP,EAAOQ,eASpC,SAAwBkC,GACtB,IAAIC,EAAW,GAGf,IAAK,MAAMC,KAAOF,EACZA,EAAKG,eAAeD,KACtBD,GAAY,KAAKC,QAAUF,EAAKE,QAIpC,OAAOD,CACT,CAnBMG,CAAgBV,EAAWI,KAE7BC,EAAKM,WAAaP,EAClBvC,EAAe6B,KAAKW,EAAK,IAEpBxC,CAAc,EAEZ,EAAA+C,iBAAkB,IAAAtC,oBAAmB,U,UCrBhDuC,EAAOC,QAAUC,QAAQ,S,q8ECCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://ks-SupportForNVL/./extension.ts","webpack://ks-SupportForNVL/./src/until.ts","webpack://ks-SupportForNVL/external commonjs \"vscode\"","webpack://ks-SupportForNVL/webpack/bootstrap","webpack://ks-SupportForNVL/webpack/startup"],"sourcesContent":["/**\r\n * @Description \r\n */\r\nimport * as vscode from 'vscode';\r\nimport {makeCompletionItem} from './src/until'\r\nimport paramsList from './src/paramsList.json'\r\nexport class MyCompletionProvider implements vscode.CompletionItemProvider {\r\n  provideCompletionItems(document: vscode.TextDocument, position: vscode.Position): vscode.ProviderResult<vscode.CompletionItem[]> {\r\n    // 获取输入的文本\r\n    const linePrefix = document.lineAt(position).text.substr(0, position.character);\r\n    // 如果以 @ 开头\r\n    if (linePrefix.endsWith('@')) {\r\n      // 创建代码补全项\r\n      const bg = new vscode.CompletionItem('bg', vscode.CompletionItemKind.Variable);\r\n      bg.insertText = new vscode.SnippetString('bg storage=\"${1:BG12a}\"');\r\n      // bg.documentation = \"nihao\"\r\n      bg.detail = '背景图片';\r\n      bg.documentation = new vscode.MarkdownString(\r\n        '显示效果: `time=700`  \\n' +\r\n        '其他trans相关参数及默认值见上表  \\n' +\r\n        'storage: 背景图片名  \\n' +\r\n        'clfg: 同时消除所有前景层  \\n' +\r\n        'hidemes: 同时消除对话框（及系统按钮）  \\n' +\r\n        'convert: 图片反色效果  \\n' +\r\n        'grayscale: 图片去色效果  \\n' +\r\n        'mcolor: 蒙版色  \\n' +\r\n        'mopacity: 蒙版色透明度'\r\n      );\r\n      const completionItem2 = new vscode.CompletionItem('fg', vscode.CompletionItemKind.Variable);\r\n      completionItem2.documentation = new vscode.MarkdownString(\r\n        '显示效果\t:time=500`  \\n' +\r\n        '其他trans相关参数及默认值见上表  \\n' +\r\n        'storage: 头像图片名  \\n' +\r\n        'opacity: 透明度  \\n' +\r\n        'fg: 同时显示人物立绘图片，不能调整位置，会自动取得指定编号图层的坐标  \\n' +\r\n        'layer: 同时显示的人物立绘所用的图层  \\n'\r\n      );\r\n      completionItem2.detail = '人物图片';\r\n      completionItem2.insertText = new vscode.SnippetString('fg pos=\"center\" storage=\"fg01_02\"');\r\n      // 返回代码补全项数组\r\n      return makeCompletionItem(paramsList);\r\n    }\r\n    // 如果不以 @ 开头，返回空数组\r\n    return [];\r\n  }\r\n}\r\nexport class MyHoverProvider implements vscode.HoverProvider {\r\n  provideHover(document: vscode.TextDocument, position: vscode.Position): vscode.ProviderResult<vscode.Hover> {\r\n    const wordRange = document.getWordRangeAtPosition(position, /\\b(?:@bg|storage)\\b/);\r\n    if (!wordRange) {\r\n      return; // 不在 @bg 或 storage 上\r\n    }\r\n\r\n    const word = document.getText(wordRange);\r\n    if (word === '@bg' || word === 'storage') {\r\n      // 设置提示框的内容\r\n      const hoverContent = new vscode.MarkdownString();\r\n      hoverContent.appendCodeblock('storage=\"\"', 'string');\r\n      hoverContent.appendMarkdown('storage: 背景图片');\r\n      \r\n      return new vscode.Hover(hoverContent, wordRange);\r\n    }\r\n\r\n    return; // 不在 @bg 或 storage 上\r\n  }\r\n}\r\n\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  // 注册代码补全提供程序\r\n  console.log('Congratulations, your extension \"helloworld-sample\" is now active!');\r\n  \r\n    // 注册代码补全提供程序\r\n  let disposable = vscode.commands.registerCommand('helloworld.helloWorld', () => {\r\n    vscode.window.showInformationMessage('Hello World!');\r\n  });\r\n  context.subscriptions.push(\r\n    vscode.languages.registerCompletionItemProvider(\r\n      { scheme: 'file', language: 'ks' },\r\n      new MyCompletionProvider(),\r\n      '@' // 触发代码补全的字符\r\n    ),\r\n    vscode.languages.registerHoverProvider(\r\n      { scheme: 'file', language: 'ks' }, // 适用的语言和文件方案\r\n      new MyHoverProvider()\r\n    )\r\n  );\r\n  context.subscriptions.push(disposable);\r\n\r\n}\r\n","/**\r\n * @Description \r\n */\r\nimport paramsList from './paramsList.json'\r\nimport * as vscode from 'vscode';\r\n\r\nexport let makeCompletionItem = (paramsList: any) => {\r\n  let CompletionItem: any[] = [];\r\n  Object.keys(paramsList).forEach((params) => {\r\n    const item = new vscode.CompletionItem(params, vscode.CompletionItemKind.Variable);\r\n    item.insertText = new vscode.SnippetString(paramsList[params][\"example\"] || \"暂无\");\r\n    // item.documentation = \"nihao\"\r\n    item.detail = paramsList[params][\"name\"] || \"暂无\";\r\n    item.documentation = new vscode.MarkdownString(\r\n      jsonToMarkdown( paramsList[params])\r\n    );\r\n    item.filterText = params;\r\n    CompletionItem.push(item);\r\n  })\r\n  return CompletionItem\r\n}\r\nexport let CompletionItems = makeCompletionItem(paramsList)\r\nfunction jsonToMarkdown(data:any) {\r\n  let markdown = '';\r\n\r\n  // 根据对象的键值对生成 Markdown 字符串\r\n  for (const key in data) {\r\n    if (data.hasOwnProperty(key)) {\r\n      markdown += `**${key}:** ${data[key]}\\n`;\r\n    }\r\n  }\r\n\r\n  return markdown;\r\n}","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(810);\n"],"names":["MyCompletionProvider","provideCompletionItems","document","position","lineAt","text","substr","character","endsWith","bg","vscode","CompletionItem","CompletionItemKind","Variable","insertText","SnippetString","detail","documentation","MarkdownString","completionItem2","makeCompletionItem","MyHoverProvider","provideHover","wordRange","getWordRangeAtPosition","word","getText","hoverContent","appendCodeblock","appendMarkdown","Hover","context","console","log","disposable","commands","registerCommand","window","showInformationMessage","subscriptions","push","languages","registerCompletionItemProvider","scheme","language","registerHoverProvider","paramsList","Object","keys","forEach","params","item","data","markdown","key","hasOwnProperty","jsonToMarkdown","filterText","CompletionItems","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}